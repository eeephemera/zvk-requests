"use client";

import React, { useState, useEffect, useRef, ChangeEvent } from 'react';
import { useForm, SubmitHandler } from 'react-hook-form';
import { useQuery, useMutation } from '@tanstack/react-query';
import ProtectedRoute from '@/components/ProtectedRoute';
import Header from '@/components/Header';
import Link from 'next/link';
import Image from 'next/image';

import { getPartners, Partner } from '@/services/partnerService';
import { getProducts, Product } from '@/services/productService';
import { findEndClientByINN, EndClient } from '@/services/endClientService';
import { getCurrentUser, User } from '@/services/userService';
import { 
    submitDealRegistration, 
    DealRegistrationData as RequestServiceDealRegistrationData,
    Request 
} from '@/services/requestService';
import { ApiError } from '@/services/apiClient';
import LoadingSpinner from '@/components/LoadingSpinner';

// –¢–∏–ø –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π react-hook-form
// –û–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–º—É, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç input type=file (FileList | null)
// –ò—Å–∫–ª—é—á–∞–µ–º attachmentFile –∏–∑ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Å FileList
// –£–±–∏—Ä–∞–µ–º productId –∏ –¥–æ–±–∞–≤–ª—è–µ–º productInput
type DealRegistrationFormData = Omit<RequestServiceDealRegistrationData, 'attachmentFile' | 'productId'> & {
    productInput?: string; // –ù–æ–≤–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞
    attachmentFile?: FileList | null;
};

export default function DealRegistrationPage() {
  const { 
    register, 
    handleSubmit, 
    reset, 
    setValue, 
    watch, 
    formState: { errors: formErrors, isSubmitting },
    trigger
  } = useForm<DealRegistrationFormData>({
    mode: 'onBlur' 
  });


  const [formError, setFormError] = useState<string | null>(null);
  const [formSuccess, setFormSuccess] = useState<string | null>(null);

  const [foundEndClient, setFoundEndClient] = useState<EndClient | null>(null);
  const [isSearchingInn, setIsSearchingInn] = useState<boolean>(false);
  const [searchError, setSearchError] = useState<string | null>(null);
  const [searchStatusMessage, setSearchStatusMessage] = useState<string | null>(null);
  const debounceTimeoutRef = useRef<NodeJS.Timeout | null>(null);

  // --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø—Ä–µ–≤—å—é —Ñ–∞–π–ª–∞ ---
  const [fileName, setFileName] = useState<string | null>(null);
  const [filePreview, setFilePreview] = useState<string | null>(null);
  const [fileError, setFileError] = useState<string | null>(null);

  // –°–Ω–æ–≤–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º register –¥–ª—è ref
  const { ref: attachmentFileRefCallback, ...attachmentFileRegisterProps } = register("attachmentFile");
  const attachmentFileRef = useRef<HTMLInputElement | null>(null);

  const endClientInnValue = watch('endClientInn');

  const { data: partners, isLoading: isLoadingPartners, error: partnersError } = useQuery<Partner[], ApiError>({
    queryKey: ['partners'],
    queryFn: getPartners,
    staleTime: 5 * 60 * 1000,
  });

  const { data: products, isLoading: isLoadingProducts, error: productsError } = useQuery<Product[], ApiError>({
    queryKey: ['products'],
    queryFn: getProducts,
    staleTime: 5 * 60 * 1000,
  });

  const { data: currentUser, isLoading: isLoadingUser, error: userError } = useQuery<User, ApiError>({
    queryKey: ['currentUser'],
    queryFn: getCurrentUser,
    staleTime: 5 * 60 * 1000,
    retry: 1
  });

  useEffect(() => {
    if (debounceTimeoutRef.current) {
      clearTimeout(debounceTimeoutRef.current);
    }

    if (!endClientInnValue || endClientInnValue.length < 10 || endClientInnValue.length > 12) {
        setIsSearchingInn(false);
        setFoundEndClient(null);
        setSearchError(null);
        setSearchStatusMessage(null);
        setValue('endClientId', null);
        setValue('endClientName', '');
        setValue('endClientCity', '');
        trigger('endClientName');
        return; 
    }

    const innPattern = /^(\d{10}|\d{12})$/;
    if (!innPattern.test(endClientInnValue)) {
        setIsSearchingInn(false);
        setSearchStatusMessage("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ù–ù.");
        setFoundEndClient(null);
        setSearchError(null);
        setValue('endClientId', null);
        return;
    }

    debounceTimeoutRef.current = setTimeout(async () => {
      setIsSearchingInn(true);
      setSearchError(null);
      setSearchStatusMessage("–ò–¥–µ—Ç –ø–æ–∏—Å–∫...");
      setFoundEndClient(null);
      setValue('endClientId', null);

      try {
        const client = await findEndClientByINN(endClientInnValue);
        if (client) {
          setFoundEndClient(client);
          setSearchStatusMessage(`–ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: ${client.name}`);
          setValue('endClientId', client.id);
          setValue('endClientName', client.name);
          setValue('endClientCity', client.city || '');
          trigger('endClientName');
        } else {
          setFoundEndClient(null);
          setSearchStatusMessage("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ.");
           setValue('endClientId', null);
           setValue('endClientName', ''); 
           setValue('endClientCity', '');
           trigger('endClientName');
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ò–ù–ù:", err);
        setSearchError(err instanceof Error ? err.message : "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ò–ù–ù");
        setSearchStatusMessage(null);
        setFoundEndClient(null);
        setValue('endClientId', null);
      } finally {
        setIsSearchingInn(false);
      }
    }, 600);

    return () => {
      if (debounceTimeoutRef.current) {
        clearTimeout(debounceTimeoutRef.current);
      }
    };
  }, [endClientInnValue, setValue, trigger]);

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ --- 
  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0] || null;
    setFileError(null);

    if (!file) {
      setFileName(null);
      setFilePreview(null);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    const maxSize = 15 * 1024 * 1024;
    if (file.size > maxSize) {
      setFileError("–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 15 –ú–ë");
      setFileName(null);
      setFilePreview(null);
      // –û—á–∏—â–∞–µ–º input —á–µ—Ä–µ–∑ ref, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç register
      if (attachmentFileRef.current) {
         attachmentFileRef.current.value = '';
      }
      return;
    }

    setFileName(file.name);

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é
    if (file.type.startsWith('image/')) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setFilePreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    } else {
      setFilePreview('üìÑ');
    }
  };

  // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ---
  const removeFile = () => {
      setFileName(null);
      setFilePreview(null);
      setFileError(null);
      // –û—á–∏—â–∞–µ–º input —á–µ—Ä–µ–∑ ref
      if (attachmentFileRef.current) {
          attachmentFileRef.current.value = '';
      }
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ RHF
      setValue('attachmentFile', null, { shouldValidate: true });
  };

  // --- –ú—É—Ç–∞—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã --- 
  const dealMutation = useMutation<Request, ApiError, RequestServiceDealRegistrationData>({ // –¢–∏–ø—ã: –†–µ–∑—É–ª—å—Ç–∞—Ç, –û—à–∏–±–∫–∞, –ü–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ
      mutationFn: submitDealRegistration, // –§—É–Ω–∫—Ü–∏—è –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
      onSuccess: (createdRequest) => {
          setFormSuccess(`–°–¥–µ–ª–∫–∞ #${createdRequest.id} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!`);
          removeFile(); 
          reset(); 
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ò–ù–ù
          setFoundEndClient(null);
          setIsSearchingInn(false);
          setSearchError(null);
          setSearchStatusMessage(null);
          // –û—á–∏—â–∞–µ–º –ø–æ–ª—è –ò–ù–ù –∏ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π (—Ö–æ—Ç—è reset –¥–æ–ª–∂–µ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å)
          setValue('endClientInn', '');
          setValue('endClientId', null);
          setValue('endClientName', '');
          setValue('endClientCity', '');
      },
      onError: (error) => {
           console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (mutation):", error);
           // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ ApiError –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ
           setFormError(error.message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.");
      },
      // onSettled: () => { // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ onSuccess –∏–ª–∏ onError
      //   // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–±–∏—Ä–∞—Ç—å –æ–±—â–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      // }
  });

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã --- 
  const onSubmit: SubmitHandler<DealRegistrationFormData> = async (formData) => {
    setFormError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
    setFormSuccess(null);
    
    const fileList = formData.attachmentFile; 
    const actualAttachmentFile: File | null = fileList && fileList.length > 0 ? fileList[0] : null;
    
    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–µ—Ä–≤–∏—Å, –≤–∫–ª—é—á–∞—è –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
    const preparedDataForService: RequestServiceDealRegistrationData = {
        // --- –û—Å–Ω–æ–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ ---
        partnerId: formData.partnerId, 
        distributorId: formData.distributorId || null, // –î–æ–±–∞–≤–ª–µ–Ω–æ. || null, –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
        
        // --- –ö–æ–Ω–µ—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç ---
        endClientId: formData.endClientId, // ID –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        endClientInn: formData.endClientInn, // –ò–ù–ù (–¥–ª—è –ø–æ–∏—Å–∫–∞/—Å–æ–∑–¥–∞–Ω–∏—è)
        endClientName: formData.endClientName, // –ò–º—è (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è)
        endClientCity: formData.endClientCity, // –ì–æ—Ä–æ–¥ (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è)
        endClientFullAddress: formData.endClientFullAddress || undefined, // –î–æ–±–∞–≤–ª–µ–Ω–æ
        endClientContactDetails: formData.endClientContactDetails || undefined, // –î–æ–±–∞–≤–ª–µ–Ω–æ

        // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ formData.productId, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ null
        productId: null, 
        customItemSku: formData.productInput === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? (formData.customItemSku || undefined) : undefined, 
        customItemName: formData.productInput === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? formData.customItemName : formData.productInput, // –ï—Å–ª–∏ –Ω–µ –ø–æ –¢–ó, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –∏–º—è
        customItemDescription: formData.productInput === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? (formData.customItemDescription || undefined) : undefined, 
        quantity: formData.productInput === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? (formData.quantity || null) : null, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –¢–ó
        unitPrice: formData.productInput === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? (formData.unitPrice || null) : null, // –¶–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –¢–ó

        // --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–¥–µ–ª–∫–∏ ---
        dealDescription: formData.dealDescription, // –û–ø–∏—Å–∞–Ω–∏–µ —Å—É—Ç–∏ —Å–¥–µ–ª–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        estimatedValue: formData.estimatedValue || null, // –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        estimatedCloseDate: formData.estimatedCloseDate || null, // –î–æ–±–∞–≤–ª–µ–Ω–æ
        fzLawType: formData.fzLawType || undefined, // –î–æ–±–∞–≤–ª–µ–Ω–æ
        mptRegistryType: formData.mptRegistryType || undefined, 
        partnerActivities: formData.partnerActivities || undefined, 

        // --- –í–ª–æ–∂–µ–Ω–∏–µ ---
        attachmentFile: actualAttachmentFile, // –§–∞–π–ª
    };

    // –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ/null/undefined –∑–Ω–∞—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω–µ–≥–æ?
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ productId, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å `productId: null`
    // –≠—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –±—ç–∫–µ–Ω–¥–∞. –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å.

    console.log("Calling mutation with Prepared Data:", preparedDataForService);
    
    try {
        // –í—ã–∑—ã–≤–∞–µ–º –º—É—Ç–∞—Ü–∏—é
        await dealMutation.mutateAsync(preparedDataForService);
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—Ö–∞/–æ—à–∏–±–∫–∏ —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ onSuccess/onError –º—É—Ç–∞—Ü–∏–∏
    } catch (error) {
        // –°—é–¥–∞ –ø–æ–ø–∞–¥–µ–º, –µ—Å–ª–∏ —Å–∞–º–∞ mutateAsync –≤—ã–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É (—Ä–µ–¥–∫–æ)
        // –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ - –≤ onError –º—É—Ç–∞—Ü–∏–∏
        console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ mutateAsync:", error);
        if (!formError) { // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ onError –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
             setFormError(error instanceof Error ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.");
        }
    }
  };

  if (isLoadingPartners || isLoadingProducts || isLoadingUser) {
    return (
      <ProtectedRoute allowedRoles={["USER"]} redirectIfNotAllowed={true}>
        <div className="min-h-screen flex flex-col bg-discord-background">
          <Header />
          <div className="flex-grow flex items-center justify-center">
            <LoadingSpinner />
            <p className="text-discord-text-muted ml-3">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
          </div>
        </div>
      </ProtectedRoute>
    );
  }

  if (partnersError || productsError || userError) {
    return (
      <ProtectedRoute allowedRoles={["USER"]} redirectIfNotAllowed={true}>
        <div className="min-h-screen flex flex-col bg-discord-background">
          <Header />
          <div className="container mx-auto p-6">
             <div className="discord-card max-w-4xl mx-auto p-6 bg-discord-danger/10 border border-discord-danger/30">
                 <h2 className="text-xl font-bold text-discord-danger mb-3">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>
                 <p className="text-discord-text-secondary mb-2">
                   –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã (–ø–∞—Ä—Ç–Ω–µ—Ä—ã, –ø—Ä–æ–¥—É–∫—Ç—ã –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ).
                 </p>
                 <p className="text-xs text-discord-text-muted">
                   {partnersError?.message || productsError?.message || userError?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}
                 </p>
             </div>
          </div>
        </div>
      </ProtectedRoute>
    );
  }

  return (
    <ProtectedRoute allowedRoles={["USER"]} redirectIfNotAllowed={true}>
      <div className="min-h-screen flex flex-col bg-discord-background">
        <Header />
        <div className="container mx-auto p-6 flex-grow">
          <div className="discord-card w-full max-w-4xl p-6 mx-auto">
            <div className="flex justify-between items-center mb-6">
              <h1 className="text-2xl font-bold text-discord-text flex items-center">
                <span className="bg-discord-accent h-8 w-1 rounded-full mr-3"></span>
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å–¥–µ–ª–∫–∏
              </h1>
              <Link
                href="/my-requests"
                className="discord-btn-secondary"
              >
                –ú–æ–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
              </Link>
            </div>

            {formError && (
               <div className="mb-4 p-3 bg-discord-danger bg-opacity-10 rounded-lg border border-discord-danger border-opacity-30">
                 <p className="text-discord-danger text-sm">{formError}</p>
               </div>
            )}
             {formSuccess && (
               <div className="mb-4 p-3 bg-discord-success bg-opacity-10 rounded-lg border border-discord-success border-opacity-30">
                 <p className="text-discord-success text-sm">{formSuccess}</p>
               </div>
            )}

            <form className="space-y-5" onSubmit={handleSubmit(onSubmit)}>
                {/* --- 0. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ (—Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) --- */}
                <div className="border border-discord-border p-4 rounded-md bg-discord-darker space-y-2">
                   <h3 className="text-lg font-semibold text-discord-text mb-2">–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∑–∞—è–≤–∫–∏</h3>
                   {currentUser ? (
                     <>
                       <p className="text-sm text-discord-text-secondary">
                         <span className="font-medium text-discord-text-muted">–§–ò–û:</span> {currentUser.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                       </p>
                       <p className="text-sm text-discord-text-secondary">
                         <span className="font-medium text-discord-text-muted">Email:</span> {currentUser.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                       </p>
                       <p className="text-sm text-discord-text-secondary">
                         <span className="font-medium text-discord-text-muted">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {currentUser.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                       </p>
                       <p className="text-sm text-discord-text-secondary">
                         <span className="font-medium text-discord-text-muted">–ö–æ–º–ø–∞–Ω–∏—è:</span> {currentUser.partner?.name || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–º–ø–∞–Ω–∏–∏'}
                       </p>
                     </>
                   ) : (
                     <p className="text-sm text-discord-text-muted">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.</p>
                   )}
                 </div>

                {/* --- 2. –û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ --- */}
                <div className="border border-discord-border p-4 rounded-md bg-discord-darker space-y-5">
                  <h3 className="text-lg font-semibold text-discord-text mb-3">–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
                    {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è */}
                    <div className="space-y-5">
                      {/* --- –ü—Ä–æ–¥—É–∫—Ç (—Ç–µ–ø–µ—Ä—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ) --- */}
                      <div>
                        <label htmlFor="productInput" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                          –ü—Ä–æ–¥—É–∫—Ç / –£—Å–ª—É–≥–∞ <span className="text-discord-danger">*</span>
                        </label>
                        <input
                          id="productInput"
                          type="text"
                          placeholder='–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ "–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó"'
                          className={`discord-input w-full ${formErrors.productInput ? 'border-discord-danger' : ''}`}
                          {...register("productInput", { 
                            required: '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ \'–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó\'' 
                          })}
                        />
                        {formErrors.productInput && <p className="text-discord-danger text-xs mt-1">{formErrors.productInput.message}</p>}
                        <p className="text-xs text-discord-text-muted mt-1">–ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ –¢–ó, –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó".</p>
                      </div>

                      {/* --- –£—Å–ª–æ–≤–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞/—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ --- */} 
                      {watch('productInput') === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' && (
                          <div className="border border-discord-border border-opacity-50 p-3 rounded-md space-y-3 bg-discord-darker/50 animate-fade-in">
                              {/* –ê—Ä—Ç–∏–∫—É–ª –∫–∞—Å—Ç–æ–º–Ω—ã–π */} 
                              <div>
                                 <label htmlFor="customItemSku" className="block text-discord-text-secondary text-xs mb-1 font-medium">
                                     –ê—Ä—Ç–∏–∫—É–ª/–ö–æ–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                                 </label>
                                 <input
                                     id="customItemSku"
                                     type="text"
                                     placeholder="–í–∞—à –∞—Ä—Ç–∏–∫—É–ª"
                                     className={`discord-input w-full text-sm ${formErrors.customItemSku ? 'border-discord-danger' : ''}`}
                                     {...register("customItemSku")}
                                 />
                                 {formErrors.customItemSku && <p className="text-discord-danger text-xs mt-1">{formErrors.customItemSku.message}</p>}
                             </div>
                              {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–µ */} 
                              <div>
                                 <label htmlFor="customItemName" className="block text-discord-text-secondary text-xs mb-1 font-medium">
                                     –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞/—É—Å–ª—É–≥–∏ <span className="text-discord-danger">*</span>
                                 </label>
                                 <input
                                     id="customItemName"
                                     type="text"
                                     placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó"
                                     className={`discord-input w-full text-sm ${formErrors.customItemName ? 'border-discord-danger' : ''}`}
                                     {...register("customItemName", {
                                         // –í–∞–ª–∏–¥–∞—Ü–∏—è: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó'
                                         required: watch('productInput') === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –¢–ó' : false
                                     })}
                                 />
                                 {formErrors.customItemName && <p className="text-discord-danger text-xs mt-1">{formErrors.customItemName.message}</p>}
                             </div>
                             {/* –û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–µ */} 
                             <div>
                                 <label htmlFor="customItemDescription" className="block text-discord-text-secondary text-xs mb-1 font-medium">
                                     –û–ø–∏—Å–∞–Ω–∏–µ/–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è <span className="text-discord-danger">*</span>
                                 </label>
                                 <textarea
                                     id="customItemDescription"
                                     placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è..."
                                     className={`discord-input w-full resize-none text-sm ${formErrors.customItemDescription ? 'border-discord-danger' : ''}`}
                                     rows={3}
                                     {...register("customItemDescription", {
                                         // –í–∞–ª–∏–¥–∞—Ü–∏—è: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó'
                                          required: watch('productInput') === '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó' ? '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –¢–ó' : false
                                     })}
                                 />
                                 {formErrors.customItemDescription && <p className="text-discord-danger text-xs mt-1">{formErrors.customItemDescription.message}</p>}
                             </div>
                              {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ */} 
                              <div>
                                 <label htmlFor="quantity" className="block text-discord-text-secondary text-xs mb-1 font-medium">
                                     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (—à—Ç/–µ–¥.) <span className="text-discord-danger">*</span>
                                 </label>
                                 <input
                                     id="quantity"
                                     type="number"
                                     placeholder="1"
                                     className={`discord-input w-full text-sm ${formErrors.quantity ? 'border-discord-danger' : ''}`}
                                     {...register("quantity", {
                                          valueAsNumber: true, 
                                          min: { value: 1, message: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0" },
                                          // –í–∞–ª–∏–¥–∞—Ü–∏—è: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó'
                                          validate: (value) => {
                                             const productInputVal = watch('productInput');
                                             if (productInputVal !== '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó') return true; // –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ '–ü—Ä–æ–¥—É–∫—Ç –ø–æ –¢–ó'
                                             
                                             const quantityValue = typeof value === 'number' && !isNaN(value) ? value : null;
                                             if (quantityValue === null || quantityValue <= 0) {
                                                 return '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–±–æ–ª—å—à–µ 0) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –¢–ó';
                                             }
                                             return true;
                                         }
                                     })}
                                 />
                                   {formErrors.quantity && <p className="text-discord-danger text-xs mt-1">{formErrors.quantity.message}</p>}
                              </div>
                              {/* –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É */} 
                              <div>
                                 <label htmlFor="unitPrice" className="block text-discord-text-secondary text-xs mb-1 font-medium">
                                     –¶–µ–Ω–∞ –∑–∞ –µ–¥. (‚ÇΩ, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                                 </label>
                                 <input
                                     id="unitPrice"
                                     type="number"
                                     placeholder="–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É"
                                     className={`discord-input w-full text-sm ${formErrors.unitPrice ? 'border-discord-danger' : ''}`}
                                     {...register("unitPrice", { valueAsNumber: true, min: { value: 0, message: "–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π" } })}
                                 />
                                  {formErrors.unitPrice && <p className="text-discord-danger text-xs mt-1">{formErrors.unitPrice.message}</p>}
                              </div>
                           </div>
                      )} {/* –ö–æ–Ω–µ—Ü —É—Å–ª–æ–≤–Ω–æ–≥–æ –±–ª–æ–∫–∞ */} 

                      {/* –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (–æ–±—â–∞—è) */} 
                      <div>
                          <label htmlFor="estimatedValue" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (‚ÇΩ, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                          </label>
                          <input
                            id="estimatedValue"
                            type="number"
                            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å–¥–µ–ª–∫–∏"
                            className={`discord-input w-full ${formErrors.estimatedValue ? 'border-discord-danger' : ''}`}
                            {...register("estimatedValue", { valueAsNumber: true, min: { value: 0, message: "–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π" } })}
                          />
                           {formErrors.estimatedValue && <p className="text-discord-danger text-xs mt-1">{formErrors.estimatedValue.message}</p>}
                      </div>
                      {/* –¢–∏–ø –§–ó */}
                      <div>
                        <label htmlFor="fzLawType" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                          –¢–∏–ø –§–ó (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </label>
                        <select
                          id="fzLawType"
                          className="discord-input w-full appearance-none pr-8"
                          style={{backgroundImage: "url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%23686b74' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\")", backgroundPosition: "right 0.5rem center", backgroundRepeat: "no-repeat", backgroundSize: "1.5em 1.5em"}}
                          {...register("fzLawType")}
                        >
                          <option value="">–ù–µ –≤—ã–±—Ä–∞–Ω–æ</option>
                          <option value="223">223 –§–ó</option>
                          <option value="44">44 –§–ó</option>
                          <option value="–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π">–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π</option>
                          <option value="-">–ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ</option>
                        </select>
                      </div>
                      {/* –¢–∏–ø —Ä–µ–µ—Å—Ç—Ä–∞ –ú–ü–¢ */}
                      <div>
                        <label htmlFor="mptRegistryType" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                          –¢–∏–ø —Ä–µ–µ—Å—Ç—Ä–∞ –ú–ü–¢ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </label>
                        <select
                          id="mptRegistryType"
                          className="discord-input w-full appearance-none pr-8"
                          style={{backgroundImage: "url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%23686b74' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\")", backgroundPosition: "right 0.5rem center", backgroundRepeat: "no-repeat", backgroundSize: "1.5em 1.5em"}}
                          {...register("mptRegistryType")}
                        >
                           <option value="">–ù–µ –≤—ã–±—Ä–∞–Ω–æ</option>
                          <option value="–†–µ–µ—Å—Ç—Ä">–†–µ–µ—Å—Ç—Ä</option>
                          <option value="–ù–µ—Ä–µ–µ—Å—Ç—Ä">–ù–µ—Ä–µ–µ—Å—Ç—Ä</option>
                          <option value="–ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ">–ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ</option>
                        </select>
                      </div>
                      {/* –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
                      <div>
                          <label htmlFor="estimatedCloseDate" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                          </label>
                          <input
                            id="estimatedCloseDate"
                            type="date"
                            className={`discord-input w-full ${formErrors.estimatedCloseDate ? 'border-discord-danger' : ''}`}
                            {...register("estimatedCloseDate")}
                          />
                           {formErrors.estimatedCloseDate && <p className="text-discord-danger text-xs mt-1">{formErrors.estimatedCloseDate.message}</p>}
                      </div>
                    </div>
                    {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è */}
                    <div className="space-y-5">
                       {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ */}
                        <div>
                          <label htmlFor="dealDescription" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ <span className="text-discord-danger">*</span>
                          </label>
                          <textarea
                            id="dealDescription"
                            placeholder="–û–ø–∏—à–∏—Ç–µ —Å—É—Ç—å —Å–¥–µ–ª–∫–∏, –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞..."
                            className={`discord-input w-full resize-none ${formErrors.dealDescription ? 'border-discord-danger' : ''}`}
                            rows={6}
                            {...register("dealDescription", { required: "–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ" })}
                          />
                          {formErrors.dealDescription && <p className="text-discord-danger text-xs mt-1">{formErrors.dealDescription.message}</p>}
                        </div>
                        {/* –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ */} 
                        <div>
                           <label htmlFor="partnerActivities" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                             –ö–ª—é—á–µ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                           </label>
                           <textarea
                             id="partnerActivities"
                             placeholder="–ß—Ç–æ –ø–∞—Ä—Ç–Ω–µ—Ä –¥–µ–ª–∞–µ—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏?"
                             className={`discord-input w-full resize-none ${formErrors.partnerActivities ? 'border-discord-danger' : ''}`}
                             rows={4}
                             {...register("partnerActivities")}
                           />
                           {formErrors.partnerActivities && <p className="text-discord-danger text-xs mt-1">{formErrors.partnerActivities.message}</p>}
                        </div>
                        {/* –î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä */} 
                        <div>
                          <label htmlFor="distributorId" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                          </label>
                          <select
                            id="distributorId"
                            className={`discord-input w-full appearance-none pr-8 ${formErrors.distributorId ? 'border-discord-danger' : ''}`}
                            style={{backgroundImage: "url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%23686b74' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\")", backgroundPosition: "right 0.5rem center", backgroundRepeat: "no-repeat", backgroundSize: "1.5em 1.5em"}}
                            {...register("distributorId", { valueAsNumber: true })}
                          >
                            <option value="">-- –ù–µ –≤—ã–±—Ä–∞–Ω --</option>
                            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ */} 
                            {partners?.map((partner) => (
                              <option key={partner.id} value={partner.id}>
                                {partner.name}
                              </option>
                            ))}
                          </select>
                          {formErrors.distributorId && <p className="text-discord-danger text-xs mt-1">{formErrors.distributorId.message}</p>}
                        </div>
                    </div>
                  </div>
                </div>


                {/* --- 3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–µ—á–Ω–æ–º –∫–ª–∏–µ–Ω—Ç–µ --- */}
                <div className="border border-discord-border p-4 rounded-md bg-discord-darker relative">
                  <h3 className="text-lg font-semibold text-discord-text mb-3">–ö–æ–Ω–µ—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
                    {/* –ò–ù–ù */}
                    <div className="relative">
                      <label htmlFor="endClientInn" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                        –ò–ù–ù –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ <span className="text-discord-danger">*</span>
                      </label>
                      <input
                        id="endClientInn"
                        type="text"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"
                        className={`discord-input w-full ${formErrors.endClientInn ? 'border-discord-danger' : ''} ${isSearchingInn ? 'pr-10' : ''}`}
                        {...register("endClientInn", {
                          required: "–ò–ù–ù –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω",
                          pattern: {
                            value: /^(\d{10}|\d{12})$/,
                            message: "–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä"
                          },
                        })}
                      />
                       {isSearchingInn && (
                           <div className="absolute right-3 top-[calc(0.375rem+1.5em)] transform -translate-y-1/2">
                             <LoadingSpinner />
                           </div>
                       )}
                      {formErrors.endClientInn && <p className="text-discord-danger text-xs mt-1">{formErrors.endClientInn.message}</p>}
                      <div className="mt-1 text-xs h-4">
                          {searchStatusMessage && !searchError && (
                             <span className={`${foundEndClient ? 'text-discord-success' : 'text-discord-text-muted'}`}>{searchStatusMessage}</span>
                          )}
                          {searchError && (
                             <span className="text-discord-danger">{searchError}</span>
                          )}
                       </div>
                    </div>

                    {/* –ü–æ–ª—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ */}
                    <>
                       <div>
                        <label htmlFor="endClientName" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                          –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ { !foundEndClient && <span className="text-discord-danger">*</span> }
                        </label>
                        <input
                          id="endClientName"
                          type="text"
                          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"
                          className={`discord-input w-full ${formErrors.endClientName ? 'border-discord-danger' : ''}`}
                          {...register("endClientName", { 
                              required: !foundEndClient ? "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞" : false 
                          })}
                          disabled={!!foundEndClient || isSearchingInn}
                        />
                        {formErrors.endClientName && <p className="text-discord-danger text-xs mt-1">{formErrors.endClientName.message}</p>}
                      </div>
                      <div>
                        <label htmlFor="endClientCity" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                          –ì–æ—Ä–æ–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </label>
                        <input
                          id="endClientCity"
                          type="text"
                          placeholder="–ì–æ—Ä–æ–¥ –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è"
                          className={`discord-input w-full ${formErrors.endClientCity ? 'border-discord-danger' : ''}`}
                          {...register("endClientCity")}
                           disabled={!!foundEndClient || isSearchingInn}
                        />
                      </div>
                    </>

                    {/* –ù–æ–≤—ã–µ –ø–æ–ª—è */} 
                    {/* –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å */} 
                    <div>
                        <label htmlFor="endClientFullAddress" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </label>
                        <input
                          id="endClientFullAddress"
                          type="text"
                          placeholder="–ò–Ω–¥–µ–∫—Å, —Ä–µ–≥–∏–æ–Ω, –≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º"
                          className={`discord-input w-full ${formErrors.endClientFullAddress ? 'border-discord-danger' : ''}`}
                          {...register("endClientFullAddress")}
                          disabled={!!foundEndClient || isSearchingInn} // –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω
                        />
                         {formErrors.endClientFullAddress && <p className="text-discord-danger text-xs mt-1">{formErrors.endClientFullAddress.message}</p>}
                    </div>
                     {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –∫–ª–∏–µ–Ω—Ç–∞ */} 
                     <div>
                        <label htmlFor="endClientContactDetails" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                            –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –∫–ª–∏–µ–Ω—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </label>
                        <input
                          id="endClientContactDetails"
                          type="text"
                          placeholder="–§–ò–û, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, email, —Ç–µ–ª–µ—Ñ–æ–Ω"
                          className={`discord-input w-full ${formErrors.endClientContactDetails ? 'border-discord-danger' : ''}`}
                          {...register("endClientContactDetails")}
                          disabled={!!foundEndClient || isSearchingInn} // –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω
                        />
                         {formErrors.endClientContactDetails && <p className="text-discord-danger text-xs mt-1">{formErrors.endClientContactDetails.message}</p>}
                    </div>

                  </div>
                </div>

                {/* --- 4. –í–ª–æ–∂–µ–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) --- */}
                <div>
                  <label htmlFor="attachmentFile" className="block text-discord-text-secondary text-sm mb-1.5 font-medium">
                    –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –º–∞–∫—Å. 15–ú–ë)
                  </label>
                  <div className={`border border-dashed rounded-lg p-4 bg-discord-darker transition-colors ${fileError ? 'border-discord-danger' : 'border-discord-lightest hover:border-discord-accent/50'}`}>
                    <input
                      id="attachmentFile"
                      type="file"
                       // –ü–µ—Ä–µ–¥–∞–µ–º ref —á–µ—Ä–µ–∑ –∫–æ–ª–±—ç–∫
                       ref={(e) => {
                         attachmentFileRefCallback(e); // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ref –æ—Ç RHF
                         attachmentFileRef.current = e; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –Ω–∞—à ref
                       }}
                      // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –æ—Ç register
                      {...attachmentFileRegisterProps} // –ò—Å–ø–æ–ª—å–∑—É–µ–º props –±–µ–∑ ref
                      className="hidden"
                      // –Ø–≤–Ω—ã–π onChange –¥–ª—è –Ω–∞—à–µ–π –ª–æ–≥–∏–∫–∏ –ø—Ä–µ–≤—å—é
                      onChange={handleFileChange}
                      accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.csv,.jpg,.jpeg,.png,.gif,.zip,.rar,.7z"
                    />
                    <label htmlFor="attachmentFile" className="cursor-pointer flex flex-col items-center text-discord-text-muted">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-8 h-8 mb-2">
                        <path strokeLinecap="round" strokeLinejoin="round" d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5" />
                      </svg>
                      <span className="text-sm mb-1">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å</span>
                      <span className="text-xs">(PDF, DOC, DOCX, XLS, XLSX, JPG, PNG –∏ –¥—Ä.)</span>
                    </label>
                  </div>
                  {fileError && <p className="text-discord-danger text-xs mt-1">{fileError}</p>}

                  {fileName && filePreview && (
                    <div className="mt-3 p-3 rounded-lg flex items-center bg-discord-medium border border-discord-border">
                      {filePreview.startsWith('data:image') ? (
                        <Image 
                          src={filePreview} 
                          alt="–ü—Ä–µ–≤—å—é" 
                          width={48}
                          height={48}
                          className="h-12 w-auto object-contain mr-3 rounded-md bg-discord-darker p-1" 
                        />
                      ) : (
                        <div className="h-10 w-10 bg-discord-dark rounded-md flex items-center justify-center mr-3 text-discord-accent text-xl">
                           {filePreview} 
                        </div>
                      )}
                      <div className="flex-1 overflow-hidden">
                        <div className="text-sm text-discord-text truncate" title={fileName}>{fileName}</div>
                      </div>
                      <button 
                        type="button"
                        onClick={removeFile}
                        className="ml-2 text-discord-text-muted hover:text-discord-danger transition-colors p-1 rounded-full hover:bg-discord-danger/10"
                        aria-label="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-5 h-5">
                          <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                      </button>
                    </div>
                  )}
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
                <div>
                  <button
                    type="submit"
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º isPending –æ—Ç –º—É—Ç–∞—Ü–∏–∏ –∏ isSubmitting –æ—Ç RHF
                    disabled={dealMutation.isPending || isSubmitting} 
                    className={`discord-btn-primary w-full py-3 relative ${dealMutation.isPending || isSubmitting ? 'opacity-80 cursor-not-allowed' : ''}`}
                  >
                     {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º isPending –æ—Ç –º—É—Ç–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–∞–¥–µ—Ä–∞ */} 
                     {(dealMutation.isPending || isSubmitting) ? (
                        <>
                           <span className="opacity-0">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–¥–µ–ª–∫—É</span> 
                           <span className="absolute inset-0 flex items-center justify-center">
                             <svg className="animate-spin h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                               <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                               <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                             </svg>
                             <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                           </span>
                        </>
                    ) : (
                      "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–¥–µ–ª–∫—É"
                    )}
                  </button>
                </div>
            </form>
            
          </div>
        </div>
      </div>
    </ProtectedRoute>
  );
}
