-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.end_clients
(
    id serial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    city text COLLATE pg_catalog."default",
    inn character varying(12) COLLATE pg_catalog."default",
    full_address text COLLATE pg_catalog."default",
    contact_person_details text COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT end_clients_pkey PRIMARY KEY (id),
    CONSTRAINT end_clients_inn_key UNIQUE (inn)
);

CREATE TABLE IF NOT EXISTS public.partners
(
    id serial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default",
    inn character varying(12) COLLATE pg_catalog."default",
    partner_status character varying(50) COLLATE pg_catalog."default",
    assigned_manager_id integer,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT partners_pkey PRIMARY KEY (id),
    CONSTRAINT partners_inn_key UNIQUE (inn)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id serial NOT NULL,
    sku character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    item_type character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'PC'::character varying,
    unit_price numeric(12, 2),
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT products_pkey PRIMARY KEY (id),
    CONSTRAINT products_sku_key UNIQUE (sku)
);

CREATE TABLE IF NOT EXISTS public.request_items
(
    id serial NOT NULL,
    request_id integer NOT NULL,
    product_id integer,
    custom_item_sku text COLLATE pg_catalog."default",
    custom_item_name text COLLATE pg_catalog."default",
    custom_item_description text COLLATE pg_catalog."default",
    quantity integer NOT NULL,
    unit_price numeric(12, 2),
    total_price numeric(14, 2),
    CONSTRAINT request_items_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.requests
(
    id serial NOT NULL,
    partner_user_id integer NOT NULL,
    partner_id integer NOT NULL,
    end_client_id integer,
    end_client_details_override text COLLATE pg_catalog."default",
    distributor_id integer,
    partner_contact_override text COLLATE pg_catalog."default",
    fz_law_type character varying(10) COLLATE pg_catalog."default",
    mpt_registry_type character varying(20) COLLATE pg_catalog."default",
    partner_activities text COLLATE pg_catalog."default",
    deal_state_description text COLLATE pg_catalog."default",
    estimated_close_date date,
    overall_tz_file bytea,
    status character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT 'На рассмотрении'::character varying,
    manager_comment text COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT requests_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password_hash text COLLATE pg_catalog."default" NOT NULL,
    role character varying(50) COLLATE pg_catalog."default" NOT NULL,
    partner_id integer,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name text COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    phone character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_login_key UNIQUE (login)
);

ALTER TABLE IF EXISTS public.partners
    ADD CONSTRAINT partners_assigned_manager_id_fkey FOREIGN KEY (assigned_manager_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS idx_partners_manager
    ON public.partners(assigned_manager_id);


ALTER TABLE IF EXISTS public.request_items
    ADD CONSTRAINT request_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.request_items
    ADD CONSTRAINT request_items_request_id_fkey FOREIGN KEY (request_id)
    REFERENCES public.requests (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_request_items_request
    ON public.request_items(request_id);


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT requests_end_client_id_fkey FOREIGN KEY (end_client_id)
    REFERENCES public.end_clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS idx_requests_end_client
    ON public.requests(end_client_id);


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT requests_partner_user_id_fkey FOREIGN KEY (partner_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_requests_partner_user
    ON public.requests(partner_user_id);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_partner FOREIGN KEY (partner_id)
    REFERENCES public.partners (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;

ALTER TABLE public.request_items
ADD CONSTRAINT check_quantity_positive CHECK (quantity > 0),
ADD CONSTRAINT check_unit_price_non_negative CHECK (unit_price >= 0);