name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Запускать при push в ветку main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Используем последнюю версию Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Клонируем репозиторий

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push server image
      working-directory: ./server
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/zvk-requests-server:latest -f Dockerfile .
        docker push ${{ secrets.DOCKER_USERNAME }}/zvk-requests-server:latest

    - name: Build and push client image
      working-directory: ./client
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/zvk-requests-client:latest -f Dockerfile .
        docker push ${{ secrets.DOCKER_USERNAME }}/zvk-requests-client:latest

    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd ~/zvk-requests # Переходим в директорию проекта на сервере
          docker compose pull # Загружаем новые образы
          docker compose up -d # Перезапускаем сервисы в фоновом режиме
          # Возможно, понадобится добавить команду для применения миграций БД, если они не автоматизированы при старте сервера
          # docker exec zvk_postgres psql -U postgres -d zvk_requests_prod -f init.sql # Только если init.sql должен запускаться каждый раз 