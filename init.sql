-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

-- Define ENUM types first, as tables depend on them.
-- Combining definitions from all migrations.
CREATE TYPE public.user_role_enum AS ENUM
    ('USER', 'MANAGER', 'ADMIN');

CREATE TYPE public.request_status_enum AS ENUM
    ('На рассмотрении', 'Одобрено', 'Отклонено', 'Требует уточнения', 'В работе', 'Выполнено', 'На уточнении', 'Одобрена', 'Отклонена', 'Завершена');


ALTER TABLE IF EXISTS public.partners DROP CONSTRAINT IF EXISTS partners_assigned_manager_id_fkey;

ALTER TABLE IF EXISTS public.request_files DROP CONSTRAINT IF EXISTS request_files_file_id_fkey;

ALTER TABLE IF EXISTS public.request_files DROP CONSTRAINT IF EXISTS request_files_request_id_fkey;

ALTER TABLE IF EXISTS public.requests DROP CONSTRAINT IF EXISTS requests_end_client_id_fkey;

ALTER TABLE IF EXISTS public.requests DROP CONSTRAINT IF EXISTS requests_partner_user_id_fkey;

ALTER TABLE IF EXISTS public.users DROP CONSTRAINT IF EXISTS fk_users_partner;



DROP TABLE IF EXISTS public.end_clients;

CREATE TABLE IF NOT EXISTS public.end_clients
(
    id serial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    city text COLLATE pg_catalog."default",
    inn character varying(12) COLLATE pg_catalog."default",
    full_address text COLLATE pg_catalog."default",
    contact_person_details text COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT end_clients_pkey PRIMARY KEY (id),
    CONSTRAINT end_clients_inn_key UNIQUE (inn)
);

DROP TABLE IF EXISTS public.files;

CREATE TABLE IF NOT EXISTS public.files
(
    id serial NOT NULL,
    file_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    mime_type character varying(100) COLLATE pg_catalog."default" NOT NULL,
    file_size bigint NOT NULL,
    file_data bytea NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT files_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.partners;

CREATE TABLE IF NOT EXISTS public.partners
(
    id serial NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default",
    inn character varying(12) COLLATE pg_catalog."default",
    partner_status character varying(50) COLLATE pg_catalog."default",
    assigned_manager_id integer,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT partners_pkey PRIMARY KEY (id),
    CONSTRAINT partners_inn_key UNIQUE (inn)
);

DROP TABLE IF EXISTS public.request_files;

CREATE TABLE IF NOT EXISTS public.request_files
(
    request_id integer NOT NULL,
    file_id integer NOT NULL,
    CONSTRAINT request_files_pkey PRIMARY KEY (request_id, file_id)
);

COMMENT ON TABLE public.request_files
    IS 'Связующая таблица для отношения многие-ко-многим между заявками и файлами.';

COMMENT ON COLUMN public.request_files.request_id
    IS 'ID заявки';

COMMENT ON COLUMN public.request_files.file_id
    IS 'ID файла';

DROP TABLE IF EXISTS public.requests;

CREATE TABLE IF NOT EXISTS public.requests
(
    id serial NOT NULL,
    partner_user_id integer NOT NULL,
    partner_id integer NOT NULL,
    end_client_id integer,
    end_client_details_override text COLLATE pg_catalog."default",
    distributor_id integer,
    partner_contact_override text COLLATE pg_catalog."default",
    fz_law_type character varying(10) COLLATE pg_catalog."default",
    mpt_registry_type character varying(20) COLLATE pg_catalog."default",
    partner_activities text COLLATE pg_catalog."default",
    deal_state_description text COLLATE pg_catalog."default",
    estimated_close_date date,
    manager_comment text COLLATE pg_catalog."default",
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    quantity integer,
    unit_price numeric(12, 2),
    total_price numeric(14, 2),
    project_name text COLLATE pg_catalog."default",
    status request_status_enum NOT NULL DEFAULT 'На рассмотрении'::request_status_enum,
    CONSTRAINT requests_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.schema_migrations;

CREATE TABLE IF NOT EXISTS public.schema_migrations
(
    version bigint NOT NULL,
    dirty boolean NOT NULL,
    CONSTRAINT schema_migrations_pkey PRIMARY KEY (version)
);

DROP TABLE IF EXISTS public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    login character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password_hash text COLLATE pg_catalog."default" NOT NULL,
    partner_id integer,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name text COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default",
    phone character varying(50) COLLATE pg_catalog."default",
    role user_role_enum NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_login_key UNIQUE (login)
);

ALTER TABLE IF EXISTS public.partners
    ADD CONSTRAINT partners_assigned_manager_id_fkey FOREIGN KEY (assigned_manager_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS idx_partners_manager
    ON public.partners(assigned_manager_id);


ALTER TABLE IF EXISTS public.request_files
    ADD CONSTRAINT request_files_file_id_fkey FOREIGN KEY (file_id)
    REFERENCES public.files (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.request_files
    ADD CONSTRAINT request_files_request_id_fkey FOREIGN KEY (request_id)
    REFERENCES public.requests (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT requests_end_client_id_fkey FOREIGN KEY (end_client_id)
    REFERENCES public.end_clients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS idx_requests_end_client
    ON public.requests(end_client_id);


ALTER TABLE IF EXISTS public.requests
    ADD CONSTRAINT requests_partner_user_id_fkey FOREIGN KEY (partner_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS idx_requests_partner_user
    ON public.requests(partner_user_id);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_partner FOREIGN KEY (partner_id)
    REFERENCES public.partners (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

-- Manually set the migration version to the latest one.
-- The last migration was 000006, so we set the version to 6.
INSERT INTO public.schema_migrations (version, dirty) VALUES (6, false);

END; 