version: '3.9'

services:
  # Серверная часть (Go)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./.env
      
    depends_on:
      - postgres
    networks:
      - zvk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    # Для продакшена настраиваем ограничения ресурсов
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # База данных PostgreSQL
  postgres:
    image: postgres:16-alpine
    env_file:
      - ./.env

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zvk-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Для продакшена настраиваем ограничения ресурсов
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # Добавляем обратный прокси для продакшена
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - server
    networks:
      - zvk-network

networks:
  zvk-network:
    driver: bridge

volumes:
  postgres_data: 